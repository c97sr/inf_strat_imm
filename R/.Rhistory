for (l in 1:ps["maxi"]) {
for (m in 1:ps["maxj"]) {
for (n in 1:ps["maxk"]) {
if (identical(as.numeric(X),1)) { # for strain 1
boosting <- dpois(1:ps.maxi-i, lambda = 3);
boosting[length(boosting)] <- 1-sum(boosting[1:length(boosting)-1])
rtn[X,a,l,m,n,l+[0:pa.maxi-l],m,n] = boosting;
}
}
}
}
}
}
for (X in 1:ps["maxX"]) {
for (a in 1:ps["maxa"]) {
for (l in 1:ps["maxi"]) {
for (m in 1:ps["maxj"]) {
for (n in 1:ps["maxk"]) {
if (identical(as.numeric(X),1)) { # for strain 1
boosting <- dpois(1:ps.maxi-i, lambda = 3)
boosting[length(boosting)] <- 1-sum(boosting[1:length(boosting)-1])
rtn[X,a,l,m,n,l+[0:pa.maxi-l],m,n] = boosting
}
}
}
}
}
}
for (X in 1:ps["maxX"]) {
for (a in 1:ps["maxa"]) {
for (l in 1:ps["maxi"]) {
for (m in 1:ps["maxj"]) {
for (n in 1:ps["maxk"]) {
if (identical(as.numeric(X),1)) { # for strain 1
#boosting <- dpois(1:ps.maxi-i, lambda = 3)
#boosting[length(boosting)] <- 1-sum(boosting[1:length(boosting)-1])
#rtn[X,a,l,m,n,l+[0:pa.maxi-l],m,n] = boosting
}
}
}
}
}
}
ps.maxX=1
ps.maxa=1
ps.maxi=10
ps.maxj=1
ps.maxk=1
for (X in 1:ps["maxX"]) {
for (a in 1:ps["maxa"]) {
for (l in 1:ps["maxi"]) {
for (m in 1:ps["maxj"]) {
for (n in 1:ps["maxk"]) {
if (identical(as.numeric(X),1)) { # for strain 1
#boosting <- dpois(1:ps.maxi-i, lambda = 3)
#boosting[length(boosting)] <- 1-sum(boosting[1:length(boosting)-1])
#rtn[X,a,l,m,n,l+[0:pa.maxi-l],m,n] = boosting
}
}
}
}
}
}
ps["maxX"]
ps.maxX
for (X in 1:ps.maxX) {
for (a in 1:ps.maxa) {
for (l in 1:ps.maxi) {
for (m in 1:ps.maxj) {
for (n in 1:ps.maxk) {
if (identical(as.numeric(X),1)) { # for strain 1
#boosting <- dpois(1:ps.maxi-i, lambda = 3)
#boosting[length(boosting)] <- 1-sum(boosting[1:length(boosting)-1])
#rtn[X,a,l,m,n,l+[0:pa.maxi-l],m,n] = boosting
}
}
}
}
}
}
for (X in 1:ps.maxX) {
for (a in 1:ps.maxa) {
for (l in 1:ps.maxi) {
for (m in 1:ps.maxj) {
for (n in 1:ps.maxk) {
if (identical(as.numeric(X),1)) { # for strain 1
boosting <- dpois(1:ps.maxi-i, lambda = 3)
boosting[length(boosting)] <- 1-sum(boosting[1:length(boosting)-1])
rtn[X,a,l,m,n,l+[0:pa.maxi-l],m,n] = boosting
}
}
}
}
}
}
for (X in 1:ps.maxX) {
for (a in 1:ps.maxa) {
for (l in 1:ps.maxi) {
for (m in 1:ps.maxj) {
for (n in 1:ps.maxk) {
if (identical(as.numeric(X),1)) { # for strain 1
boosting <- dpois(1:ps.maxi-i, lambda = 3)
#boosting[length(boosting)] <- 1-sum(boosting[1:length(boosting)-1])
#rtn[X,a,l,m,n,l+[0:pa.maxi-l],m,n] = boosting
}
}
}
}
}
}
for (X in 1:ps.maxX) {
for (a in 1:ps.maxa) {
for (l in 1:ps.maxi) {
for (m in 1:ps.maxj) {
for (n in 1:ps.maxk) {
if (identical(as.numeric(X),1)) { # for strain 1
boosting <- dpois(1:ps.maxi-i, lambda = 3)
print(boosting)
#boosting[length(boosting)] <- 1-sum(boosting[1:length(boosting)-1])
#rtn[X,a,l,m,n,l+[0:pa.maxi-l],m,n] = boosting
}
}
}
}
}
}
for (X in 1:ps.maxX) {
for (a in 1:ps.maxa) {
for (l in 1:ps.maxi) {
for (m in 1:ps.maxj) {
for (n in 1:ps.maxk) {
if (identical(as.numeric(X),1)) { # for strain 1
boosting <- dpois(1:(ps.maxi-i), lambda = 3)
print(boosting)
#boosting[length(boosting)] <- 1-sum(boosting[1:length(boosting)-1])
#rtn[X,a,l,m,n,l+[0:pa.maxi-l],m,n] = boosting
}
}
}
}
}
}
for (X in 1:ps.maxX) {
for (a in 1:ps.maxa) {
for (l in 1:ps.maxi) {
for (m in 1:ps.maxj) {
for (n in 1:ps.maxk) {
if (identical(as.numeric(X),1)) { # for strain 1
boosting <- dpois(1:(ps.maxi-i), lambda = 3)
print(boosting)
#boosting[length(boosting)] <- 1-sum(boosting[1:length(boosting)-1])
#rtn[X,a,l,m,n,l+[0:pa.maxi-l],m,n] = boosting
}
}
}
}
}
}
i=8
boosting <- dpois(1:(ps.maxi-i), lambda = 3)
boosting
boosting <- [];
boosting <- 0;
for (X in 1:ps.maxX) {
for (a in 1:ps.maxa) {
for (l in 1:ps.maxi) {
for (m in 1:ps.maxj) {
for (n in 1:ps.maxk) {
if (identical(as.numeric(X),1)) { # for strain 1
boosting <- dpois(1:(ps.maxi-i), lambda = 3)
print(boosting)
#boosting[length(boosting)] <- 1-sum(boosting[1:length(boosting)-1])
#rtn[X,a,l,m,n,l+[0:pa.maxi-l],m,n] = boosting
boosting <- 0;
}
}
}
}
}
}
for (X in 1:ps.maxX) {
for (a in 1:ps.maxa) {
for (l in 1:ps.maxi) {
for (m in 1:ps.maxj) {
for (n in 1:ps.maxk) {
if (identical(as.numeric(X),1)) { # for strain 1
boosting <- dpois(1:(ps.maxi-l), lambda = 3)
print(boosting)
#boosting[length(boosting)] <- 1-sum(boosting[1:length(boosting)-1])
#rtn[X,a,l,m,n,l+[0:pa.maxi-l],m,n] = boosting
boosting <- 0;
}
}
}
}
}
}
for (X in 1:ps.maxX) {
for (a in 1:ps.maxa) {
for (l in 1:ps.maxi) {
for (m in 1:ps.maxj) {
for (n in 1:ps.maxk) {
if (identical(as.numeric(X),1)) { # for strain 1
boosting <- dpois(1:(ps.maxi-l), lambda = 3)
boosting[length(boosting)] <- 1-sum(boosting[1:length(boosting)-1])
print(boosting)
#
#rtn[X,a,l,m,n,l+[0:pa.maxi-l],m,n] = boosting
boosting <- 0;
}
}
}
}
}
}
rtn[X,a,l,m,n,l+[1:pa.maxi],m,n]
rtn <- array(0, dim=c (ps.maxX,ps.maxa,ps.maxi,ps.maxj,ps.maxk,ps.maxi,ps.maxj,ps.maxk))
rtn
rtn <- array(0, dim=c (ps.maxX,ps.maxa,ps.maxi,ps.maxj,ps.maxk,ps.maxi,ps.maxj,ps.maxk))
1:pa.maxi
for (X in 1:ps.maxX) {
for (a in 1:ps.maxa) {
for (l in 1:ps.maxi) {
for (m in 1:ps.maxj) {
for (n in 1:ps.maxk) {
if (identical(as.numeric(X),1)) { # for strain 1
boosting <- dpois(1:(ps.maxi-l), lambda = 3)
boosting[length(boosting)] <- 1-sum(boosting[1:length(boosting)-1])
if (l < ps.maxi){
print(boosting)
rtn[X,a,l,m,n,l+1:(pa.maxi-l),m,n] = boosting
}
#
#rtn[X,a,l,m,n,l+[1:pa.maxi],m,n] = boosting
#boosting <- 0;
}
}
}
}
}
}
rtn[1,1,1,1,1,10,1,1]
rtn[1,1,10,1,1,10,1,1]
rtn[1,1,9,1,1,10,1,1]
rtn[1,1,1,1,1,1,1,1]
rtn[1,1,1,1,1,2,1,1]
vv <- function(d) fff
View(vv)
vv <- function(d) 2
vv(5)
source('callJava_function.r')
getwd()
setwd("E:/Documents/Github/mrc_nihr_phe/source/isltr/R")
source('callJava_function.r')
print(2)
ps.maxX=1
ps.maxa=1
ps.maxi=10
ps.maxj=1
ps.maxk=1
matG <- make.G(ps)
size(matG)
matG
ps.maxX
ps.maxa
ps.maxi
make.G(ps)
setwd("E:/Documents/Github/mrc_nihr_phe/source/isltr/R")
getwd
make.G
make.G(ps)
g <- make.G(ps)
g
for (X in 1:ps.maxX) {
for (a in 1:ps.maxa) {
for (l in 1:ps.maxi) {
for (m in 1:ps.maxj) {
for (n in 1:ps.maxk) {
if (identical(as.numeric(X),1)) { # for strain 1
boosting <- dpois(1:(ps.maxi-l), lambda = 3)
boosting[length(boosting)] <- 1-sum(boosting[1:length(boosting)-1])
if (l < ps.maxi){
print(boosting)
rtn[X,a,l,m,n,l+1:(pa.maxi-l),m,n] = boosting
}
#
#rtn[X,a,l,m,n,l+[1:pa.maxi],m,n] = boosting
#boosting <- 0;
}
}
}
}
}
}
print(ps.maxi)
g <- make.G(ps)
make.G(ps)
make.G(ps)
make.G(ps)
print('hello')
make.G(ps)
make.G(ps)  Ps.maxX=1
Ps.maxa=1
Ps.maxi=10
Ps.maxj=1
Ps.maxk=1
matG <- make.G(Ps)
Ps.maxX=1
Ps.maxa=1
Ps.maxi=10
Ps.maxj=1
Ps.maxk=1
matG <- make.G(Ps)
matG
Ps.maxX=1
Ps.maxa=1
Ps.maxi=10
Ps.maxj=1
Ps.maxk=1
matG <- make.G(Ps)
matG
matG <- make.G(Ps)
matG
clear matG
rm matG
rm(list=ls())
setwd("E:/Documents/Github/mrc_nihr_phe/source/isltr/R")
source('callJava_function.R')
setwd("E:/Documents/Github/mrc_nihr_phe/source/isltr/R")  Ps.maxX=1
Ps.maxa=1
Ps.maxi=10
Ps.maxj=1
Ps.maxk=1
Ps.maxX=1
Ps.maxa=1
Ps.maxi=10
Ps.maxj=1
Ps.maxk=1
Ps.maxX=1
Ps.maxa=1
Ps.maxi=10
Ps.maxj=1
Ps.maxk=1
make.G(Ps)
make.G1(Ps)
source('callJava_function.R')
make.G(Ps)
Ps
Ps.maxX=1
Ps.maxa=1
Ps.maxi=10
Ps.maxj=1
Ps.maxk=1
Ps
Ps.maxX=1
Ps.maxa=1
Ps.maxi=10
Ps.maxj=1
Ps.maxk=1
Ps.maxX <- 1
Ps
Ps.maxa
Ps.maxa
Ps.maxX
make.G(Ps)
df <- data.frame(
x = 1:3,
y = c("a", "b", "c"),
stringsAsFactors = FALSE)
df
df.x
df[x]
df["x"]
df["x",1]
df[1,"x"]
df[2,"x"]
Ps <- data.frame(
+     maxX = 1,
+     maxa = 1,
+     maxi = 10,
+     maxj = 1,
+     maxk = 1,
+     stringsAsFactors = FALSE)
Ps <- data.frame(
maxX = 1,
maxa = 1,
maxi = 10,
maxj = 1,
maxk = 1,
stringsAsFactors = FALSE)
Ps["maxX"]
source('callJava_function.R')
source('callJava_function.R')
Ps <- data.frame(
maxX = 1,
maxa = 1,
maxi = 10,
maxj = 1,
maxk = 1,
stringsAsFactors = FALSE)
make.G1(Ps)
source('callJava_function.R')
Ps <- data.frame(
maxX = 1,
maxa = 1,
maxi = 10,
maxj = 1,
maxk = 1,
stringsAsFactors = FALSE)
make.G1(Ps)
source('callJava_function.R')
Ps <- data.frame(
maxX = 1,
maxa = 1,
maxi = 10,
maxj = 1,
maxk = 1,
stringsAsFactors = FALSE)
make.G1(Ps)
Ps["maxa"]
Ps["maxa"] == 1
status(Ps.maxX)
structure(Ps.maxX)
source('callJava_function.R')
Ps <- data.frame(
maxX = 1,
maxa = 1,
maxi = 10,
maxj = 1,
maxk = 1,
stringsAsFactors = FALSE)
make.G1(Ps)
source('callJava_function.R')
Ps <- data.frame(
maxX = 1,
maxa = 1,
maxi = 10,
maxj = 1,
maxk = 1,
stringsAsFactors = FALSE)
make.G1(Ps)
source('callJava_function.R')
Ps <- data.frame(
maxX = 1,
maxa = 1,
maxi = 10,
maxj = 1,
maxk = 1,
stringsAsFactors = FALSE)
make.G1(Ps)
source('callJava_function.R')
Ps <- data.frame(
maxX = 1,
maxa = 1,
maxi = 10,
maxj = 1,
maxk = 1,
stringsAsFactors = FALSE)
make.G1(Ps)
1:1
Ps <- c(
maxX = 1,
maxa = 1,
maxi = 10,
maxj = 1,
maxk = 1,
stringsAsFactors = FALSE)
Ps["maxX"]
Ps["maxa"]
Ps <- c(
maxX = 1,
maxa = 1,
maxi = 10,
maxj = 1,
maxk = 1
#stringsAsFactors = FALSE
)
Ps["maxa"]
make.G(Ps)
source('callJava_function.R')
make.G(Ps)
make.G1(Ps)
matG <- make.G1(Ps)
matG
source('callJava_function.R')
Ps <- c(
maxX = 1,
maxa = 1,
maxi = 10,
maxj = 1,
maxk = 1
#stringsAsFactors = FALSE
)
make.G(Ps)
matG <- make.G(Ps)
install.packages("rJava")
.jinit()
install.packages("rJava")
.jinit()
install.packages("rJava")
?jinit
library(rJava)
.jinit()
obj=.jnew("GibbsR")
.jcall(obj,"[[D","gibbs",as.integer(N),as.integer(thin),as.integer(seed))
obj=.jnew("GibbsR")
getwd()
cd ..
.jinit("../../java/Gibbs.jar")
obj=.jnew("GibbsR")
library(rJava)
quit()
